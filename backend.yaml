- name: configur backend server i.e nodejs it is like app server
  hosts: backend
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.venkaty.online
  become: yes
  tasks:
  - name: disable nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: "{{ item }}"
      loop:
      - nodejs
      - mysql
    
  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: downlode the code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy backend services
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import
